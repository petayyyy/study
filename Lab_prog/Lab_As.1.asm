;
; AssemblerApplication9.asm
;
; Created: 31.01.2021 16:03:51
; Author : ilyah
;

.include "m168def.inc"

.def MINIMUM = r16
.def MAXIMUM = r17
.def RESULT = r18
.def STAK = r19
.def I = r20
.def NUM = r21
.def HAG = r22

LDI STAK, low(RAMEND) 		; Создаю стак памяти
OUT SPL, STAK
LDI STAK, high(RAMEND)
OUT SPH, STAK
CLR STAK

.DSEG		; Выделяю память ОЗУ под ответ и выходной массив
.ORG SRAM_Start
.BYTE 11

.CSEG  		; Начало программы
.ORG 0x07

ARRAY: .db 21, 4, 10, 2, 100, 30, 202, 12, 6, 7 		; Ввожу массив


ldi ZH, High(ARRAY*2)
ldi ZL, Low(ARRAY*2)

CLR I
CLR NUM
CLR RESULT
CLR MINIMUM
CLR MAXIMUM

LPM MINIMUM, Z+

FINDMIN:
	CPI I, 9
	BREQ ENDMIN

	LPM NUM, Z+
	INC I

	CP NUM, MINIMUM
	BRLO NEWMIN

	RJMP FINDMIN

NEWMIN:
	MOV MINIMUM, NUM
	RJMP FINDMIN

ENDMIN:

	ldi ZH, High(ARRAY*2)
	ldi ZL, Low(ARRAY*2)
	LPM MAXIMUM, Z+
	CLR I
	LDI HAG, 6
	ADD MINIMUM, HAG

FINDMAX:
	CPI I, 9
	BREQ ENDMAX

	LPM NUM, Z+
	INC I

	CP NUM, MAXIMUM
	BRSH NEWMAX

	RJMP FINDMAX

NEWMAX:
	MOV MAXIMUM, NUM
	RJMP FINDMAX

ENDMAX:
	ldi ZH, High(ARRAY*2)
	ldi ZL, Low(ARRAY*2)
	CLR I
	LDI HAG, 5
	SUB MAXIMUM, HAG

FINDNUM:
	CPI I, 10
	BREQ ENDNUM

	LPM NUM, Z+
	INC I

	CP NUM, MAXIMUM
	BRLO FINDNUMM

	RJMP FINDNUM

FINDNUMM:
	CP NUM, MINIMUM
	BRSH PLUS
	RJMP FINDNUM

PLUS:
	INC RESULT
	PUSH NUM
	RJMP FINDNUM
ENDNUM:
	OUT PORTD, RESULT
	STS  SRAM_START, RESULT 
	LDI  XL, LOW(SRAM_START + 1)  
	LDI  XH, HIGH(SRAM_START + 1)                
	CLR I

RAMPUSH:   
	INC  I 
	POP  NUM 
	ST   X+, NUM 
	CP   I, RESULT
	BRNE RAMPUSH 
	RJMP END
END: RJMP END
